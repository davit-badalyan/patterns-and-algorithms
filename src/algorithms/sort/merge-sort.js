let arr = [
  966,
  171,
  806,
  421,
  348,
  310,
  542,
  565,
  139,
  54,
  68,
  661,
  954,
  794,
  587,
  669,
  934,
  653,
  512,
  946,
  513,
  793,
  592,
  873,
  627,
  112,
  884,
  552,
  241,
  546,
  316,
  840,
  215,
  945,
  2,
  99,
  635,
  358,
  186,
  518,
  21,
  533,
  785,
  202,
  31,
  670,
  222,
  271,
  568,
  596,
  359,
  242,
  686,
  269,
  415,
  926,
  311,
  907,
  801,
  823,
  657,
  63,
  923,
  989,
  855,
  848,
  570,
  40,
  477,
  87,
  977,
  915,
  479,
  434,
  429,
  757,
  386,
  100,
  288,
  70,
  166,
  810,
  293,
  433,
  611,
  353,
  411,
  77,
  886,
  192,
  104,
  116,
  639,
  825,
  256,
  113,
  152,
  247,
  446,
  849,
  629,
  765,
  569,
  548,
  713,
  494,
  25,
  739,
  447,
  402,
  528,
  281,
  638,
  327,
  279,
  853,
  482,
  248,
  640,
  39,
  875,
  8,
  122,
  594,
  131,
  485,
  438,
  394,
  151,
  153,
  962,
  541,
  643,
  74,
  630,
  747,
  391,
  725,
  289,
  340,
  95,
  380,
  993,
  46,
  203,
  974,
  407,
  304,
  123,
  745,
  682,
  819,
  584,
  980,
  323,
  212,
  842,
  398,
  385,
  634,
  349,
  620,
  921,
  408,
  278,
  730,
  791,
  831,
  737,
  362,
  674,
  802,
  708,
  972,
  223,
  556,
  687,
  119,
  576,
  228,
  502,
  754,
  862,
  258,
  127,
  507,
  275,
  776,
  383,
  356,
  761,
  948,
  709,
  179,
  869,
  688,
  781,
  328,
  628,
  48,
  796,
  539,
  129,
  250,
  303,
  880,
  460,
  520,
  453,
  947,
  925,
  409,
  859,
  581,
  604,
  65,
  560,
  147,
  488,
  306,
  189,
  370,
  760,
  703,
  770,
  910,
  3,
  961,
  382,
  338,
  204,
  292,
  161,
  232,
  61,
  577,
  19,
  324,
  939,
  35,
  901,
  631,
  804,
  786,
  567,
  769,
  207,
  337,
  579,
  618,
  51,
  206,
  403,
  89,
  326,
  813,
  685,
  956,
  832,
  181,
  405,
  888,
  53,
  390,
  375,
  128,
  623,
  742,
  860,
  759,
  170,
  917,
  406,
  986,
  439,
  397,
  818,
  96,
  168,
  834,
  450,
  698,
  723,
  649,
  607,
  690,
  412,
  692,
  396,
  209,
  480,
  863,
  720,
  11,
  992,
  73,
  710,
];

function merge(array, start, middle, end) {
  let firstHalf = [];
  let secondHalf = [];

  let k = start;
  let i;
  let j;

  for (i = 0; k <= middle; i++, k++) {
    firstHalf[i] = array[k];
  }

  for (j = 0; k <= end; j++, k++) {
    secondHalf[j] = array[k];
  }

  k = start;
  i = 0;
  j = 0;

  while (i < firstHalf.length && j < secondHalf.length) {
    if (firstHalf[i] <= secondHalf[j]) {
      array[k++] = firstHalf[i++];
    } else {
      array[k++] = secondHalf[j++];
    }
  }

  while (i < firstHalf.length) {
    array[k++] = firstHalf[i++];
  }

  while (j < secondHalf.length) {
    array[k++] = secondHalf[j++];
  }
}

function mergeSort(array, start = 0, end = array.length - 1) {
  if (start < end) {
    let middle = Math.floor((start + end) / 2);
    mergeSort(array, start, middle);
    mergeSort(array, middle + 1, end);

    merge(array, start, middle, end);
  }
}

console.log(arr);
mergeSort(arr);
console.log(arr);
